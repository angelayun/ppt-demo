原型模式就是将可复用、可共享的、耗时大的从基类中提出来然后放到其原型中，
子类通过组合继承或者寄生组合式继承而将方法和属性继承下来，对于子类中那些需要重写的方法进行重写
这样子类创建的对象既具有子类的属性和方法也共享了基类的原型方法

原型模式在任何时候都可以对基类或者子类进行方法的拓展，且所有被实例化的对象或者类都能获取这些方法


原型模式更多的是用在对对象的创建上，比如创建一个实例对象的构造函数比较复杂，或者耗时比较长，或者通过创建多个对象来实现
最好不要用new关键字去复制这些基类，可以通过对象这些对象属性或者方法进行复制来实现创建，这是原型模块最初的思想


原型模式可以让多个对象分享同一个原型对象的属性和方法，这种继承的实现是不需要创建的，而是将原型对象分享给那些继承的对象，
当然有时需要让每个继承对象独立拥有一份原型对象，此时我们就需要对原型对象进行复制


原型对象更适合在创建复杂的对象时，对于那些需要一直在变化而导致结构不停的改变时，将那些比较稳定的属性和方法共用而提取的继承的实现
