1、box-shadow还接受第四个参数（称作“扩张半径”）， 通过指定正值或负值， 可以让投影面积加大或者减小
2、如果我们想要一道实线边框其实也是可以通过box-shadow来模拟，原理就是一个正值的扩张半径加上两个为零的偏移量以及为零的模糊值
eg:
    background: yellowgreen;
    box-shadow: 0 0 0 10px #655;
3、border其实也能实现上述实线效果而且似乎挺简单，但是box-shadow却是有border无法媲美的功能，它支持逗号分隔语法， 我们可以创建任意数量的投影
eg:
    box-shadow: 0 0 0 10px #655, 0 0 0 15px deeppink;
4、需要注意的是box-shadow 是层层叠加的，也就是说如果你想让第二层边框宽度为5的话则必须在第一层边框宽度10的基础上增加5，也就是最终值为15
5、投影效果跟边框的效果完全不一致，
    a)投影它不会影响布局， 而且也不会受到 box-sizing 属性的影响
    b)边框会响应鼠标点击事件，投影出来的边框虽然看上去占据空间大了很多，但是点击区域范围没有变大(无法响应点击事件可通过因为它不会影响布局， 而且也不会
受到 box-sizing 属性的影响)
6、如果我们要模拟虚线边框的话，box-shadow 就没辙了，虽然outline并不支持逗号分隔，但是可实现虚拟边框，还可以通过 outline-offset 属性来控制它跟元素边缘之间的间距， 这个属性甚至可以接受负值
7、

